// <auto-generated />
using System;
using EC.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EC.Infra.Data.Migrations
{
    [DbContext(typeof(EzEvolutyzCornerWebDevContext))]
    [Migration("20201202131053_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("Relational:Sequence:.CreatePasscode", "'CreatePasscode', '', '1000', '1', '1000', '9999', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.ProjectCode", "'ProjectCode', '', '170', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.RoleModuleID", "'RoleModuleID', '', '750', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EC.Infra.Data.Context.AccSpecOptionalHolidays", b =>
                {
                    b.Property<int>("FinancialYearId")
                        .HasColumnType("int");

                    b.Property<int>("AccSpecOptionalHolidayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Acc_Spec_OptionalHolidayId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccoutId")
                        .HasColumnName("AccoutID")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("NoofOptionalHolidays")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("FinancialYearId")
                        .HasName("PK__Acc_Spec__6ECE4C913118C8A0");

                    b.ToTable("Acc_Spec_OptionalHolidays");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.Account", b =>
                {
                    b.Property<int>("AccAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Acc_AccountID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccAccountCode")
                        .IsRequired()
                        .HasColumnName("Acc_AccountCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("AccAccountDescription")
                        .HasColumnName("Acc_AccountDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccAccountName")
                        .IsRequired()
                        .HasColumnName("Acc_AccountName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("AccActiveStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Acc_ActiveStatus")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("AccCompanyLogo")
                        .HasColumnName("Acc_CompanyLogo")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("AccCreatedBy")
                        .HasColumnName("Acc_CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("AccCreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Acc_CreatedDate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("AccEmailId")
                        .HasColumnName("Acc_EmailID")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("AccIsDeleted")
                        .HasColumnName("Acc_isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("AccMobileNumber")
                        .HasColumnName("Acc_MobileNumber")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("AccModifiedBy")
                        .HasColumnName("Acc_ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AccModifiedDate")
                        .HasColumnName("Acc_ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("AccPhoneNumber")
                        .HasColumnName("Acc_PhoneNumber")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<short>("AccVersion")
                        .HasColumnName("Acc_Version")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsPreRequisite")
                        .HasColumnName("is_pre_requisite")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsAccount")
                        .HasColumnName("is_UsAccount")
                        .HasColumnType("bit");

                    b.HasKey("AccAccountId")
                        .HasName("PK_Company");

                    b.HasIndex("AccCreatedBy");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.AccountClients", b =>
                {
                    b.Property<int>("AccClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Acc_ClientID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccAccountId")
                        .HasColumnName("Acc_AccountID")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("ClientName")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("CompanyName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("Fax")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("IndustryId")
                        .HasColumnName("IndustryID")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Phone")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("PostalCode")
                        .HasColumnType("varchar(6)")
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<int?>("StateId")
                        .HasColumnType("int");

                    b.Property<string>("WebsiteUrl")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("AccClientId")
                        .HasName("PK__AccountC__20F03F6DC26D585C");

                    b.ToTable("AccountClients");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.AccountDepartments", b =>
                {
                    b.Property<int>("AccountDepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AccountDepartmentID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepartmentName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("DeptActiveStatus")
                        .HasColumnName("Dept_ActiveStatus")
                        .HasColumnType("bit");

                    b.Property<int?>("DeptCreatedBy")
                        .HasColumnName("Dept_CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeptCreatedDate")
                        .HasColumnName("Dept_CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DeptDescription")
                        .HasColumnName("Dept_Description")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<bool?>("DeptIsDeleted")
                        .HasColumnName("Dept_isDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("DeptModifiedBy")
                        .HasColumnName("Dept_ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeptModifiedDate")
                        .HasColumnName("Dept_ModifiedDate")
                        .HasColumnType("datetime");

                    b.HasKey("AccountDepartmentId")
                        .HasName("PK__AccountD__7D5BB9ED47E49C53");

                    b.ToTable("AccountDepartments");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.AccountSocialMediaProfiles", b =>
                {
                    b.Property<int>("AccSocialMediaProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Acc_SocialMediaProfileId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AsmpAccountId")
                        .HasColumnName("Asmp_AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AsmpCreatedDate")
                        .HasColumnName("Asmp_CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("AsmpModifiedDate")
                        .HasColumnName("Asmp_ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("AsmpSocialMediaId")
                        .HasColumnName("Asmp_SocialMediaId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("AccSocialMediaProfileId")
                        .HasName("PK__AccountS__6C99D9572888619E");

                    b.ToTable("AccountSocialMediaProfiles");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.AccountSpecificTasks", b =>
                {
                    b.Property<int>("AccSpecificTaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Acc_SpecificTaskId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccSpecificTaskName")
                        .HasColumnName("Acc_SpecificTaskName")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("AccountId")
                        .HasColumnName("AccountID")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnName("isDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("StatusId")
                        .HasColumnType("bit");

                    b.Property<int?>("TskTaskId")
                        .HasColumnName("tsk_TaskID")
                        .HasColumnType("int");

                    b.HasKey("AccSpecificTaskId")
                        .HasName("PK__AccountS__8E18E0FC9103E344");

                    b.ToTable("AccountSpecificTasks");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.AlexaDevices", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DeviceId")
                        .HasColumnName("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsAuthenticated")
                        .HasColumnType("bit");

                    b.Property<string>("UsrPEmployeeId")
                        .HasColumnName("UsrP_EmployeeID")
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.HasKey("Id");

                    b.ToTable("AlexaDevices");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.AspNetRoles", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.AspNetUserClaims", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.AspNetUserLogins", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("LoginProvider", "ProviderKey", "UserId")
                        .HasName("PK_dbo.AspNetUserLogins");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.AspNetUserRoles", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("UserId", "RoleId")
                        .HasName("PK_dbo.AspNetUserRoles");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.AspNetUsers", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LockoutEndDateUtc")
                        .HasColumnType("datetime");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.AssessmentForPosition", b =>
                {
                    b.Property<int>("Apid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("APID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InterviewForPositionname")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.HasKey("Apid")
                        .HasName("PK__Assessme__4C29F36F06DB4275");

                    b.ToTable("Assessment_For_Position");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.AttachmentsinTimesheets", b =>
                {
                    b.Property<int>("AttachmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("TimeSheetId")
                        .HasColumnName("TimeSheetID")
                        .HasColumnType("int");

                    b.Property<string>("UploadedImages")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.HasKey("AttachmentId")
                        .HasName("PK__Attachme__442C64BEAE69C5B7");

                    b.HasIndex("TimeSheetId");

                    b.ToTable("AttachmentsinTimesheets");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.CandidateInterviewResult", b =>
                {
                    b.Property<int>("Cirid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CIRID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Candidateid")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Descriptionforoptionchoosen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Questionid")
                        .HasColumnType("int");

                    b.Property<int?>("SelectedOption")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Cirid")
                        .HasName("PK__Candidat__A365994851A9DF71");

                    b.HasIndex("Candidateid");

                    b.ToTable("CandidateInterviewResult");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.ClientProjects", b =>
                {
                    b.Property<int>("ClProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CL_ProjectID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Accountid")
                        .HasColumnType("int");

                    b.Property<string>("ClientProjDesc")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ClientProjTitle")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("ProjProjectId")
                        .HasColumnName("Proj_ProjectID")
                        .HasColumnType("int");

                    b.HasKey("ClProjectId")
                        .HasName("PK__ClientPr__E0AE9254C5F91DFC");

                    b.HasIndex("ProjProjectId");

                    b.ToTable("ClientProjects");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.ClientProjectsTasks", b =>
                {
                    b.Property<int>("ClProjectsTasksId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CL_ProjectsTasksID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccSpecifictaskid")
                        .HasColumnName("acc_specifictaskid")
                        .HasColumnType("int");

                    b.Property<int?>("Accountid")
                        .HasColumnType("int");

                    b.Property<int?>("RolRoleid")
                        .HasColumnName("rol_roleid")
                        .HasColumnType("int");

                    b.HasKey("ClProjectsTasksId")
                        .HasName("PK__ClientPr__ClientProjectsTasks");

                    b.ToTable("ClientProjectsTasks");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.ClientsBusiness", b =>
                {
                    b.Property<int>("BusinessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccAccountId")
                        .HasColumnName("Acc_AccountID")
                        .HasColumnType("int");

                    b.Property<string>("BusinessTitle")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("BusinessId")
                        .HasName("PK__ClientsB__F1EAA36EEC470BE4");

                    b.ToTable("ClientsBusiness");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.Comments", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("commentId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("TicketId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Timstamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int?>("Userid")
                        .HasColumnType("int");

                    b.HasKey("CommentId")
                        .HasName("PK__comments__CDDE919D6653514E");

                    b.ToTable("comments");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.ComponentType", b =>
                {
                    b.Property<int>("ComponentTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("ComActiveStatus")
                        .HasColumnName("Com_ActiveStatus")
                        .HasColumnType("bit");

                    b.Property<int?>("ComCreatedBy")
                        .HasColumnName("Com_CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ComCreatedDate")
                        .HasColumnName("Com_CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("ComIsDeleted")
                        .HasColumnName("Com_isDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ComModifiedBy")
                        .HasColumnName("Com_ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ComModifiedDate")
                        .HasColumnName("Com_ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ComponentType1")
                        .HasColumnName("ComponentType")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("ComponentTypeId");

                    b.ToTable("ComponentType");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.ContentType", b =>
                {
                    b.Property<int>("ContentTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("ConActiveStatus")
                        .HasColumnName("Con_ActiveStatus")
                        .HasColumnType("bit");

                    b.Property<int?>("ConCreatedBy")
                        .HasColumnName("Con_CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ConCreatedDate")
                        .HasColumnName("Con_CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("ConIsDeleted")
                        .HasColumnName("Con_isDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ConModifiedBy")
                        .HasColumnName("Con_ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ConModifiedDate")
                        .HasColumnName("Con_ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ContentTitle")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Description")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.HasKey("ContentTypeId");

                    b.ToTable("ContentType");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PhoneCode")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("StatusId")
                        .HasColumnType("bit");

                    b.HasKey("CountryId");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.Department", b =>
                {
                    b.Property<int>("Did")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DepartmentDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Did")
                        .HasName("PK__Departme__C0312218E015C032");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.Devices", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DeviceId")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.DocumentType", b =>
                {
                    b.Property<int>("DocumentTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<bool?>("DocActiveStatus")
                        .HasColumnName("Doc_ActiveStatus")
                        .HasColumnType("bit");

                    b.Property<int?>("DocCreatedBy")
                        .HasColumnName("Doc_CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DocCreatedDate")
                        .HasColumnName("Doc_CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("DocIsDeleted")
                        .HasColumnName("Doc_isDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("DocModifiedBy")
                        .HasColumnName("Doc_ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DocModifiedDate")
                        .HasColumnName("Doc_ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DocumentTitle")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.HasKey("DocumentTypeId");

                    b.ToTable("DocumentType");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.EmployeeBankDetails", b =>
                {
                    b.Property<int>("EmpBankId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EmpBankID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BankNo")
                        .HasColumnName("BANK_No")
                        .HasColumnType("bigint");

                    b.Property<int?>("EmpBUserId")
                        .HasColumnName("EmpB_UserID")
                        .HasColumnType("int");

                    b.Property<string>("EsiNo")
                        .HasColumnName("ESI_No")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PanNo")
                        .HasColumnName("PAN_No")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<int?>("PayModeId")
                        .HasColumnName("PayModeID")
                        .HasColumnType("int");

                    b.Property<string>("PfNo")
                        .HasColumnName("PF_No")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<long?>("UanNo")
                        .HasColumnName("UAN_No")
                        .HasColumnType("bigint");

                    b.HasKey("EmpBankId")
                        .HasName("PK__Employee__6A76EDD193A76714");

                    b.ToTable("EmployeeBankDetails");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.EmployeeSalaryComponent", b =>
                {
                    b.Property<int>("EmpSalCompId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComponentDescription")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ComponentTitle")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("ComponentTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpScAccountId")
                        .HasColumnName("EmpSC_AccountID")
                        .HasColumnType("int");

                    b.Property<bool?>("EmpScActiveStatus")
                        .HasColumnName("EmpSC_ActiveStatus")
                        .HasColumnType("bit");

                    b.Property<int?>("EmpScCreatedBy")
                        .HasColumnName("EmpSC_CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EmpScCreatedDate")
                        .HasColumnName("EmpSC_CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("EmpScIsDeleted")
                        .HasColumnName("EmpSC_isDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("EmpScModifiedBy")
                        .HasColumnName("EmpSC_ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EmpScModifiedDate")
                        .HasColumnName("EmpSC_ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("EmpScVersion")
                        .HasColumnName("EmpSC_Version")
                        .HasColumnType("int");

                    b.HasKey("EmpSalCompId")
                        .HasName("PK__Employee__D754E4733063685A");

                    b.ToTable("EmployeeSalaryComponent");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.EmployeeSalarySlips", b =>
                {
                    b.Property<int>("EmpSalarySlipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EmpSalarySlipID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EpmssUserId")
                        .HasColumnName("Epmss_UserID")
                        .HasColumnType("int");

                    b.Property<int?>("Month")
                        .HasColumnType("int");

                    b.Property<int?>("Year")
                        .HasColumnName("YEAR")
                        .HasColumnType("int");

                    b.HasKey("EmpSalarySlipId")
                        .HasName("PK__Employee__E1895488E987072A");

                    b.ToTable("EmployeeSalarySlips");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.EmployeeSalaryStructure", b =>
                {
                    b.Property<int>("EmpsStructureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Emps_StructureID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Ctc")
                        .HasColumnName("CTC")
                        .HasColumnType("money");

                    b.Property<int?>("EmpsUserId")
                        .HasColumnName("Emps_UserID")
                        .HasColumnType("int");

                    b.Property<bool?>("EssActiveStatus")
                        .HasColumnName("Ess_ActiveStatus")
                        .HasColumnType("bit");

                    b.Property<int?>("EssCreatedBy")
                        .HasColumnName("Ess_CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EssCreatedDate")
                        .HasColumnName("Ess_CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("EssIsDeleted")
                        .HasColumnName("Ess_isDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("EssModifiedBy")
                        .HasColumnName("Ess_ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EssModifiedDate")
                        .HasColumnName("Ess_ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("EssVersion")
                        .HasColumnName("Ess_Version")
                        .HasColumnType("int");

                    b.Property<int?>("FinancialYearId")
                        .HasColumnType("int");

                    b.Property<int?>("Payable")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SalaryMonth")
                        .HasColumnType("datetime");

                    b.Property<int?>("WorkedDays")
                        .HasColumnType("int");

                    b.Property<int?>("WorkingDays")
                        .HasColumnType("int");

                    b.HasKey("EmpsStructureId")
                        .HasName("PK__Employee__6DF8601300D16DE3");

                    b.ToTable("EmployeeSalaryStructure");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.EmployeeSalaryStructureDetails", b =>
                {
                    b.Property<int>("EmpssdetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmpSalCompId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpsStructureId")
                        .HasColumnName("Emps_StructureId")
                        .HasColumnType("int");

                    b.Property<bool?>("EssDActiveStatus")
                        .HasColumnName("EssD_ActiveStatus")
                        .HasColumnType("bit");

                    b.Property<int?>("EssDCreatedBy")
                        .HasColumnName("EssD_CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EssDCreatedDate")
                        .HasColumnName("EssD_CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("EssDIsDeleted")
                        .HasColumnName("EssD_isDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("EssDModifiedBy")
                        .HasColumnName("EssD_ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EssDModifiedDate")
                        .HasColumnName("EssD_ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("EssDVersion")
                        .HasColumnName("EssD_Version")
                        .HasColumnType("int");

                    b.HasKey("EmpssdetailId")
                        .HasName("PK__Employee__34451075A3A937AD");

                    b.ToTable("EmployeeSalaryStructureDetails");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.ErrorLogs", b =>
                {
                    b.Property<int>("ErrorlogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("MethodName")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("SourceName")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.HasKey("ErrorlogId")
                        .HasName("PK__ErrorLog__4F9BF6F2AB599A44");

                    b.ToTable("ErrorLogs");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.FinancialYear", b =>
                {
                    b.Property<int>("FinancialYearId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("EndDate")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("StartDate")
                        .HasColumnType("int");

                    b.HasKey("FinancialYearId");

                    b.ToTable("FinancialYear");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.GenericRoles", b =>
                {
                    b.Property<int>("GenericRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("GenericRoleID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("StatusId")
                        .HasColumnName("StatusID")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("GenericRoleId")
                        .HasName("PK__GenericR__3E5CEFF6288AEB01");

                    b.ToTable("GenericRoles");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.GenericTasks", b =>
                {
                    b.Property<int>("TskTaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("tsk_TaskID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccAccountId")
                        .HasColumnName("Acc_AccountID")
                        .HasColumnType("int");

                    b.Property<bool>("TskActiveStatus")
                        .HasColumnName("tsk_ActiveStatus")
                        .HasColumnType("bit");

                    b.Property<int>("TskCreatedBy")
                        .HasColumnName("tsk_CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("TskCreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("tsk_CreatedDate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("TskIsDeleted")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("tsk_isDeleted")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("TskModifiedBy")
                        .HasColumnName("tsk_ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TskModifiedDate")
                        .HasColumnName("tsk_ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("TskTaskDescription")
                        .HasColumnName("tsk_TaskDescription")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("TskTaskName")
                        .IsRequired()
                        .HasColumnName("tsk_TaskName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<short>("TskVersion")
                        .HasColumnName("tsk_Version")
                        .HasColumnType("smallint");

                    b.HasKey("TskTaskId")
                        .HasName("PK_TaskLookup");

                    b.ToTable("GenericTasks");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.HireType", b =>
                {
                    b.Property<int>("HireTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HireTypeID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HireType1")
                        .HasColumnName("HireType")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("HireTypeShortForm")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<bool?>("StatusId")
                        .HasColumnName("StatusID")
                        .HasColumnType("bit");

                    b.HasKey("HireTypeId");

                    b.ToTable("HireType");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.HistoryAccount", b =>
                {
                    b.Property<int>("HistoryAccountAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("History_Account_AccountID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HistoryAccAccountCode")
                        .IsRequired()
                        .HasColumnName("History_Acc_AccountCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("HistoryAccAccountDescription")
                        .HasColumnName("History_Acc_AccountDescription")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("HistoryAccAccountId")
                        .HasColumnName("History_Acc_AccountID")
                        .HasColumnType("int");

                    b.Property<string>("HistoryAccAccountName")
                        .IsRequired()
                        .HasColumnName("History_Acc_AccountName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("HistoryAccActiveStatus")
                        .HasColumnName("History_Acc_ActiveStatus")
                        .HasColumnType("bit");

                    b.Property<string>("HistoryAccCompanyLogo")
                        .HasColumnName("History_Acc_CompanyLogo")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("HistoryAccCreatedBy")
                        .HasColumnName("History_Acc_CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("HistoryAccCreatedDate")
                        .HasColumnName("History_Acc_CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("HistoryAccEmailId")
                        .HasColumnName("History_Acc_EmailID")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("HistoryAccIsDeleted")
                        .HasColumnName("History_Acc_isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("HistoryAccMobileNumber")
                        .HasColumnName("History_Acc_MobileNumber")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("HistoryAccModifiedBy")
                        .HasColumnName("History_Acc_ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("HistoryAccModifiedDate")
                        .HasColumnName("History_Acc_ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("HistoryAccPhoneNumber")
                        .HasColumnName("History_Acc_PhoneNumber")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<short>("HistoryAccVersion")
                        .HasColumnName("History_Acc_Version")
                        .HasColumnType("smallint");

                    b.HasKey("HistoryAccountAccountId");

                    b.ToTable("History_Account");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.HistoryLeaveComments", b =>
                {
                    b.Property<int>("HistoryCommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("History_CommentId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Action")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("createdDate")
                        .HasColumnType("date");

                    b.Property<int?>("Managerid")
                        .HasColumnName("managerid")
                        .HasColumnType("int");

                    b.Property<int>("Userid")
                        .HasColumnType("int");

                    b.Property<int>("UsrlLeaveId")
                        .HasColumnName("Usrl_LeaveId")
                        .HasColumnType("int");

                    b.HasKey("HistoryCommentId")
                        .HasName("PK__History___9785CB96D89435E7");

                    b.ToTable("History_LeaveComments");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.HistoryLeaveScheme", b =>
                {
                    b.Property<int>("HistoryLeaveSchemeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("History_LeaveScheme_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HistoryLschmAccountId")
                        .HasColumnName("History_LSchm_AccountID")
                        .HasColumnType("int");

                    b.Property<bool>("HistoryLschmActiveStatus")
                        .HasColumnName("History_LSchm_ActiveStatus")
                        .HasColumnType("bit");

                    b.Property<int>("HistoryLschmCreatedBy")
                        .HasColumnName("History_LSchm_CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("HistoryLschmCreatedDate")
                        .HasColumnName("History_LSchm_CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("HistoryLschmIsDeleted")
                        .HasColumnName("History_LSchm_isDeleted")
                        .HasColumnType("bit");

                    b.Property<short>("HistoryLschmLeaveCount")
                        .HasColumnName("History_LSchm_LeaveCount")
                        .HasColumnType("smallint");

                    b.Property<string>("HistoryLschmLeaveFrequency")
                        .IsRequired()
                        .HasColumnName("History_LSchm_LeaveFrequency")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("HistoryLschmLeaveScheme")
                        .IsRequired()
                        .HasColumnName("History_LSchm_LeaveScheme")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("HistoryLschmLeaveSchemeCode")
                        .IsRequired()
                        .HasColumnName("History_LSchm_LeaveSchemeCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("HistoryLschmLeaveSchemeDescription")
                        .HasColumnName("History_LSchm_LeaveSchemeDescription")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("HistoryLschmLeaveSchemeId")
                        .HasColumnName("History_LSchm_LeaveSchemeID")
                        .HasColumnType("int");

                    b.Property<int>("HistoryLschmLeaveTypeId")
                        .HasColumnName("History_LSchm_LeaveTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("HistoryLschmModifiedBy")
                        .HasColumnName("History_LSchm_ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("HistoryLschmModifiedDate")
                        .HasColumnName("History_LSchm_ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("HistoryLschmUserTypeId")
                        .HasColumnName("History_LSchm_UserTypeID")
                        .HasColumnType("int");

                    b.Property<short>("HistoryLschmVersion")
                        .HasColumnName("History_LSchm_Version")
                        .HasColumnType("smallint");

                    b.HasKey("HistoryLeaveSchemeId");

                    b.ToTable("History_LeaveScheme");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.HistoryLeaveType", b =>
                {
                    b.Property<int>("HistoryLeaveTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("History_LeaveType_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HistoryLtypAccountId")
                        .HasColumnName("History_LTyp_AccountID")
                        .HasColumnType("int");

                    b.Property<bool>("HistoryLtypActiveStatus")
                        .HasColumnName("History_LTyp_ActiveStatus")
                        .HasColumnType("bit");

                    b.Property<int>("HistoryLtypCreatedBy")
                        .HasColumnName("History_LTyp_CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("HistoryLtypCreatedDate")
                        .HasColumnName("History_LTyp_CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("HistoryLtypIsDeleted")
                        .HasColumnName("History_LTyp_isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("HistoryLtypLeaveType")
                        .IsRequired()
                        .HasColumnName("History_LTyp_LeaveType")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("HistoryLtypLeaveTypeDescription")
                        .HasColumnName("History_LTyp_LeaveTypeDescription")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("HistoryLtypLeaveTypeId")
                        .HasColumnName("History_LTyp_LeaveTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("HistoryLtypModifiedBy")
                        .HasColumnName("History_LTyp_ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("HistoryLtypModifiedDate")
                        .HasColumnName("History_LTyp_ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<short>("HistoryLtypVersion")
                        .HasColumnName("History_LTyp_Version")
                        .HasColumnType("smallint");

                    b.HasKey("HistoryLeaveTypeId");

                    b.ToTable("History_LeaveType");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.HistoryProjects", b =>
                {
                    b.Property<int>("HistoryProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("History_Project_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HistoryProjAccountId")
                        .HasColumnName("History_Proj_AccountID")
                        .HasColumnType("int");

                    b.Property<bool>("HistoryProjActiveStatus")
                        .HasColumnName("History_Proj_ActiveStatus")
                        .HasColumnType("bit");

                    b.Property<int>("HistoryProjCreatedBy")
                        .HasColumnName("History_Proj_CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("HistoryProjCreatedDate")
                        .HasColumnName("History_Proj_CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("HistoryProjEndDate")
                        .HasColumnName("History_Proj_EndDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("HistoryProjIsDeleted")
                        .HasColumnName("History_Proj_isDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("HistoryProjModifiedBy")
                        .HasColumnName("History_Proj_ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("HistoryProjModifiedDate")
                        .HasColumnName("History_Proj_ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("HistoryProjProjectCode")
                        .IsRequired()
                        .HasColumnName("History_Proj_ProjectCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("HistoryProjProjectDescription")
                        .HasColumnName("History_Proj_ProjectDescription")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("HistoryProjProjectId")
                        .HasColumnName("History_Proj_ProjectID")
                        .HasColumnType("int");

                    b.Property<string>("HistoryProjProjectName")
                        .IsRequired()
                        .HasColumnName("History_Proj_ProjectName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("HistoryProjStartDate")
                        .HasColumnName("History_Proj_StartDate")
                        .HasColumnType("datetime");

                    b.Property<short>("HistoryProjVersion")
                        .HasColumnName("History_Proj_Version")
                        .HasColumnType("smallint");

                    b.HasKey("HistoryProjectId");

                    b.ToTable("History_Projects");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.HistoryRole", b =>
                {
                    b.Property<int>("HistoryRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("History_Role_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HistoryRolAccountId")
                        .HasColumnName("History_Rol_AccountID")
                        .HasColumnType("int");

                    b.Property<bool>("HistoryRolActiveStatus")
                        .HasColumnName("History_Rol_ActiveStatus")
                        .HasColumnType("bit");

                    b.Property<int>("HistoryRolCreatedBy")
                        .HasColumnName("History_Rol_createdBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("HistoryRolCreatedDate")
                        .HasColumnName("History_Rol_CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("HistoryRolIsDeleted")
                        .HasColumnName("History_Rol_isDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("HistoryRolModifiedBy")
                        .HasColumnName("History_Rol_ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("HistoryRolModifiedDate")
                        .HasColumnName("History_Rol_ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("HistoryRolRoleCode")
                        .IsRequired()
                        .HasColumnName("History_Rol_RoleCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("HistoryRolRoleDescription")
                        .HasColumnName("History_Rol_RoleDescription")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("HistoryRolRoleId")
                        .HasColumnName("History_Rol_RoleID")
                        .HasColumnType("int");

                    b.Property<string>("HistoryRolRoleName")
                        .IsRequired()
                        .HasColumnName("History_Rol_RoleName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("HistoryRolVersion")
                        .HasColumnName("History_Rol_Version")
                        .HasColumnType("int");

                    b.HasKey("HistoryRoleId");

                    b.ToTable("History_Role");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.HistoryUserProjects", b =>
                {
                    b.Property<int>("HuprojUserProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HUProj_UserProjectID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("HuprojActiveStatus")
                        .HasColumnName("HUProj_ActiveStatus")
                        .HasColumnType("bit");

                    b.Property<int>("HuprojCreatedBy")
                        .HasColumnName("HUProj_CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("HuprojCreatedDate")
                        .HasColumnName("HUProj_CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("HuprojEndDate")
                        .HasColumnName("HUProj_EndDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("HuprojIsDeleted")
                        .HasColumnName("HUProj_isDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("HuprojModifiedBy")
                        .HasColumnName("HUProj_ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("HuprojModifiedDate")
                        .HasColumnName("HUProj_ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<byte>("HuprojParticipationPercentage")
                        .HasColumnName("HUProj_ParticipationPercentage")
                        .HasColumnType("tinyint");

                    b.Property<int>("HuprojProjectId")
                        .HasColumnName("HUProj_ProjectID")
                        .HasColumnType("int");

                    b.Property<DateTime>("HuprojStartDate")
                        .HasColumnName("HUProj_StartDate")
                        .HasColumnType("datetime");

                    b.Property<int>("HuprojUserId")
                        .HasColumnName("HUProj_UserID")
                        .HasColumnType("int");

                    b.Property<short>("HuprojVersion")
                        .HasColumnName("HUProj_Version")
                        .HasColumnType("smallint");

                    b.HasKey("HuprojUserProjectId");

                    b.ToTable("History_UserProjects");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.HistoryUserType", b =>
                {
                    b.Property<int>("HistoryUserTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("History_UserType_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HistoryAccountId")
                        .HasColumnName("History_AccountID")
                        .HasColumnType("int");

                    b.Property<bool>("HistoryUsTActiveStatus")
                        .HasColumnName("History_UsT_ActiveStatus")
                        .HasColumnType("bit");

                    b.Property<int>("HistoryUsTCreatedBy")
                        .HasColumnName("History_UsT_CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("HistoryUsTCreatedDate")
                        .HasColumnName("History_UsT_CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("HistoryUsTIsDeleted")
                        .HasColumnName("History_UsT_isDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("HistoryUsTModifiedBy")
                        .HasColumnName("History_UsT_ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("HistoryUsTModifiedDate")
                        .HasColumnName("History_UsT_ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("HistoryUsTUserType")
                        .IsRequired()
                        .HasColumnName("History_UsT_UserType")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("HistoryUsTUserTypeCode")
                        .IsRequired()
                        .HasColumnName("History_UsT_UserTypeCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("HistoryUsTUserTypeDescription")
                        .HasColumnName("History_UsT_UserTypeDescription")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("HistoryUsTUserTypeId")
                        .HasColumnName("History_UsT_UserTypeID")
                        .HasColumnType("int");

                    b.Property<int>("HistoryUsTVersion")
                        .HasColumnName("History_UsT_Version")
                        .HasColumnType("int");

                    b.HasKey("HistoryUserTypeId");

                    b.ToTable("History_UserType");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.HistoryUsers", b =>
                {
                    b.Property<int>("HistoryUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("History_User_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HistoryUsrAccountId")
                        .HasColumnName("History_Usr_AccountID")
                        .HasColumnType("int");

                    b.Property<bool>("HistoryUsrActiveStatus")
                        .HasColumnName("History_Usr_ActiveStatus")
                        .HasColumnType("bit");

                    b.Property<int?>("HistoryUsrCreatedBy")
                        .HasColumnName("History_Usr_CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("HistoryUsrCreatedDate")
                        .HasColumnName("History_Usr_CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("HistoryUsrIsDeleted")
                        .HasColumnName("History_Usr_isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("HistoryUsrLoginId")
                        .IsRequired()
                        .HasColumnName("History_Usr_LoginId")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("HistoryUsrManager")
                        .HasColumnName("History_Usr_Manager")
                        .HasColumnType("int");

                    b.Property<int?>("HistoryUsrManager2")
                        .HasColumnName("History_Usr_Manager2")
                        .HasColumnType("int");

                    b.Property<int?>("HistoryUsrModifiedBy")
                        .HasColumnName("History_Usr_ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("HistoryUsrModifiedDate")
                        .HasColumnName("History_Usr_ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("HistoryUsrPassword")
                        .IsRequired()
                        .HasColumnName("History_Usr_Password")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("HistoryUsrRoleId")
                        .HasColumnName("History_Usr_RoleID")
                        .HasColumnType("int");

                    b.Property<int?>("HistoryUsrTaskId")
                        .HasColumnName("History_Usr_TaskID")
                        .HasColumnType("int");

                    b.Property<int>("HistoryUsrUserId")
                        .HasColumnName("History_Usr_UserID")
                        .HasColumnType("int");

                    b.Property<int>("HistoryUsrUserTypeId")
                        .HasColumnName("History_Usr_UserTypeID")
                        .HasColumnType("int");

                    b.Property<string>("HistoryUsrUsername")
                        .HasColumnName("History_Usr_Username")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<short>("HistoryUsrVersion")
                        .HasColumnName("History_Usr_Version")
                        .HasColumnType("smallint");

                    b.HasKey("HistoryUserId");

                    b.ToTable("History_Users");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.HistoryWfhcomments", b =>
                {
                    b.Property<int>("HistoryWfhcommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("History_WFHCommentId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Action")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("createdDate")
                        .HasColumnType("date");

                    b.Property<int?>("Managerid")
                        .HasColumnName("managerid")
                        .HasColumnType("int");

                    b.Property<int>("Userid")
                        .HasColumnType("int");

                    b.Property<int>("UserwfhId")
                        .HasColumnName("UserwfhID")
                        .HasColumnType("int");

                    b.HasKey("HistoryWfhcommentId")
                        .HasName("PK__History___1F68D78137A875CF");

                    b.ToTable("History_WFHComments");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.HolidayCalendar", b =>
                {
                    b.Property<int>("HolidayCalendarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HolidayCalendarID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnName("AccountID")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("HolidayDate")
                        .HasColumnType("date");

                    b.Property<string>("HolidayName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isActive")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("isDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOptionalHoliday")
                        .HasColumnName("isOptionalHoliday")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("date");

                    b.Property<int?>("ProjectId")
                        .HasColumnName("ProjectID")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("HolidayCalendarId");

                    b.HasIndex("AccountId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("HolidayCalendar");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.InterviewCandidate", b =>
                {
                    b.Property<int>("Icid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ICID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AssessmentDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("AssessmentForPositionid")
                        .HasColumnName("Assessment_For_Positionid")
                        .HasColumnType("int");

                    b.Property<string>("AssessmentTime")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Emailid")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("MobileNo")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("RecrutementUserid")
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .HasColumnName("status")
                        .HasColumnType("bit");

                    b.HasKey("Icid")
                        .HasName("PK__Intervie__B83FFBFD931BE40A");

                    b.HasIndex("AssessmentForPositionid");

                    b.ToTable("InterviewCandidate");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.InterviewPositionTechnologyStack", b =>
                {
                    b.Property<int>("Ipid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IPID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssessmentForPositionPositionid")
                        .HasColumnName("Assessment_For_Position_Positionid")
                        .HasColumnType("int");

                    b.Property<int?>("AssessmentTimePeriodInSec")
                        .HasColumnName("Assessment_TimePeriod_in_sec")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("NoOfQuestions")
                        .HasColumnName("No_of_Questions")
                        .HasColumnType("int");

                    b.Property<int?>("TechnologyStackId")
                        .HasColumnName("TechnologyStack_Id")
                        .HasColumnType("int");

                    b.HasKey("Ipid")
                        .HasName("PK__Intervie__8FB9622A822696FD");

                    b.HasIndex("AssessmentForPositionPositionid");

                    b.HasIndex("TechnologyStackId");

                    b.ToTable("Interview_Position_TechnologyStack");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.Issuetypes", b =>
                {
                    b.Property<int>("Itid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ITID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("DepartmentId")
                        .HasColumnName("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Itid")
                        .HasName("PK__Issuetyp__44B161D3328D0945");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Issuetypes");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.LeaveScheme", b =>
                {
                    b.Property<int>("LschmLeaveSchemeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LSchm_LeaveSchemeID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FinancialYearId")
                        .HasColumnType("int");

                    b.Property<int>("LschmAccountId")
                        .HasColumnName("LSchm_AccountID")
                        .HasColumnType("int");

                    b.Property<bool>("LschmActiveStatus")
                        .HasColumnName("LSchm_ActiveStatus")
                        .HasColumnType("bit");

                    b.Property<int>("LschmCreatedBy")
                        .HasColumnName("LSchm_CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("LschmCreatedDate")
                        .HasColumnName("LSchm_CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("LschmIsDeleted")
                        .HasColumnName("LSchm_isDeleted")
                        .HasColumnType("bit");

                    b.Property<double?>("LschmLeaveCount")
                        .HasColumnName("LSchm_LeaveCount")
                        .HasColumnType("float");

                    b.Property<string>("LschmLeaveFrequency")
                        .HasColumnName("LSchm_LeaveFrequency")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LschmLeaveScheme")
                        .HasColumnName("LSchm_LeaveScheme")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LschmLeaveSchemeCode")
                        .HasColumnName("LSchm_LeaveSchemeCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LschmLeaveSchemeDescription")
                        .HasColumnName("LSchm_LeaveSchemeDescription")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("LschmLeaveTypeId")
                        .HasColumnName("LSchm_LeaveTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("LschmModifiedBy")
                        .HasColumnName("LSchm_ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LschmModifiedDate")
                        .HasColumnName("LSchm_ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("LschmUserTypeId")
                        .HasColumnName("LSchm_UserTypeID")
                        .HasColumnType("int");

                    b.Property<short?>("LschmVersion")
                        .HasColumnName("LSchm_Version")
                        .HasColumnType("smallint");

                    b.HasKey("LschmLeaveSchemeId");

                    b.ToTable("LeaveScheme");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.LeaveStatus", b =>
                {
                    b.Property<int>("LStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("L_StatusId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LStatus")
                        .HasColumnName("L_Status")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("LStatusId")
                        .HasName("PK__LeaveSta__C478A10C5EF76E46");

                    b.ToTable("LeaveStatus");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.LeaveType", b =>
                {
                    b.Property<int>("LtypLeaveTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LTyp_LeaveTypeID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LtypAccountId")
                        .HasColumnName("LTyp_AccountID")
                        .HasColumnType("int");

                    b.Property<bool?>("LtypActiveStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LTyp_ActiveStatus")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("LtypCreatedBy")
                        .HasColumnName("LTyp_CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("LtypCreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LTyp_CreatedDate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("LtypIsDeleted")
                        .HasColumnName("LTyp_isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LtypLeaveType")
                        .IsRequired()
                        .HasColumnName("LTyp_LeaveType")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LtypLeaveTypeDescription")
                        .HasColumnName("LTyp_LeaveTypeDescription")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("LtypModifiedBy")
                        .HasColumnName("LTyp_ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LtypModifiedDate")
                        .HasColumnName("LTyp_ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<short>("LtypVersion")
                        .HasColumnName("LTyp_Version")
                        .HasColumnType("smallint");

                    b.HasKey("LtypLeaveTypeId");

                    b.ToTable("LeaveType");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.MasterModule", b =>
                {
                    b.Property<int>("ModModuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Mod_ModuleID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("ModActiveStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Mod_ActiveStatus")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("ModCreatedBy")
                        .HasColumnName("Mod_CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModCreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Mod_CreatedDate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModDescription")
                        .HasColumnName("Mod_Description")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<bool>("ModIsDeleted")
                        .HasColumnName("Mod_isDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModModifiedBy")
                        .HasColumnName("Mod_ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModModifiedDate")
                        .HasColumnName("Mod_ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModModuleCode")
                        .IsRequired()
                        .HasColumnName("Mod_ModuleCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ModModuleName")
                        .IsRequired()
                        .HasColumnName("Mod_ModuleName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<short>("ModVersion")
                        .HasColumnName("Mod_Version")
                        .HasColumnType("smallint");

                    b.HasKey("ModModuleId");

                    b.ToTable("Master_Module");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.MasterSubModule", b =>
                {
                    b.Property<int>("SubModuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Sub_ModuleID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ModModuleId")
                        .HasColumnName("Mod_ModuleID")
                        .HasColumnType("int");

                    b.Property<int?>("Orderby")
                        .HasColumnType("int");

                    b.Property<bool?>("SubActiveStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Sub_ActiveStatus")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("SubCreatedBy")
                        .HasColumnName("Sub_CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubCreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Sub_CreatedDate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("SubDescription")
                        .HasColumnName("Sub_Description")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<bool>("SubIsDeleted")
                        .HasColumnName("Sub_isDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("SubModifiedBy")
                        .HasColumnName("Sub_ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SubModifiedDate")
                        .HasColumnName("Sub_ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("SubModuleCode")
                        .IsRequired()
                        .HasColumnName("Sub_ModuleCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("SubModuleName")
                        .IsRequired()
                        .HasColumnName("Sub_ModuleName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<short>("SubVersion")
                        .HasColumnName("Sub_Version")
                        .HasColumnType("smallint");

                    b.HasKey("SubModuleId")
                        .HasName("PK_Sub_Module");

                    b.ToTable("Master_Sub_Module");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.MasterTimesheetMode", b =>
                {
                    b.Property<int>("TimesheetModeId")
                        .HasColumnName("TimesheetMode_id")
                        .HasColumnType("int");

                    b.Property<string>("TimeModeName")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.HasKey("TimesheetModeId")
                        .HasName("PK__Master_T__D226F810CFC74009");

                    b.ToTable("Master_TimesheetMode");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.MigrationHistory", b =>
                {
                    b.Property<string>("MigrationId")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("ContextKey")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<byte[]>("Model")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ProductVersion")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.HasKey("MigrationId", "ContextKey")
                        .HasName("PK_dbo.__MigrationHistory");

                    b.ToTable("__MigrationHistory");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.MobileNotificationTemplate", b =>
                {
                    b.Property<int>("MobileNotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccAccountId")
                        .HasColumnName("Acc_AccountID")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Subject")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.HasKey("MobileNotificationId")
                        .HasName("PK__MobileNo__DC73F57D4A71239E");

                    b.ToTable("MobileNotificationTemplate");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.ModuleAccessType", b =>
                {
                    b.Property<int>("ModuleAccessTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ModuleAccessTypeID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModuleAccessType1")
                        .HasColumnName("ModuleAccessType")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<bool?>("StatusId")
                        .HasColumnType("bit");

                    b.HasKey("ModuleAccessTypeId");

                    b.ToTable("ModuleAccessType");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.NewsBoard", b =>
                {
                    b.Property<int>("NewsBoardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Image")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<bool?>("NewsStatus")
                        .HasColumnName("News_Status")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("NewsBoardId");

                    b.ToTable("NewsBoard");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.NobleLeadDataAiu", b =>
                {
                    b.Property<double?>("Amleadsrcid")
                        .HasColumnName("amleadsrcid")
                        .HasColumnType("float");

                    b.Property<double?>("Phone")
                        .HasColumnType("float");

                    b.Property<string>("School")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<double?>("SyStudentId")
                        .HasColumnType("float");

                    b.ToTable("NobleLeadData_AIU");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.NobleLeadDataCtu", b =>
                {
                    b.Property<double?>("Amleadsrcid")
                        .HasColumnName("amleadsrcid")
                        .HasColumnType("float");

                    b.Property<double?>("Phone")
                        .HasColumnType("float");

                    b.Property<string>("School")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<double?>("SyStudentId")
                        .HasColumnType("float");

                    b.ToTable("NobleLeadData_CTU");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.PayMode", b =>
                {
                    b.Property<int>("PayModeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PayModeID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PayMode1")
                        .HasColumnName("PayMode")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PayModeDescription")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.HasKey("PayModeId");

                    b.ToTable("PayMode");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.Phases", b =>
                {
                    b.Property<int>("PhaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnName("isDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PhaseTitle")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("ShortDescription")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.HasKey("PhaseId")
                        .HasName("PK__Phases__5BA26D62481213A5");

                    b.ToTable("Phases");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.Policies", b =>
                {
                    b.Property<int>("PolicyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Icon")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<bool?>("IsCss")
                        .HasColumnName("Is_Css")
                        .HasColumnType("bit");

                    b.Property<bool?>("PolActiveStatus")
                        .HasColumnName("Pol_ActiveStatus")
                        .HasColumnType("bit");

                    b.Property<int?>("PolCreatedBy")
                        .HasColumnName("Pol_CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PolCreatedDate")
                        .HasColumnName("Pol_CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("PolIsDeleted")
                        .HasColumnName("Pol_isDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("PolModifiedBy")
                        .HasColumnName("Pol_ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PolModifiedDate")
                        .HasColumnName("Pol_ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PolicyDescription")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("PolicyTitle")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.HasKey("PolicyId")
                        .HasName("PK__Policies__2E1339A4C7379F6A");

                    b.ToTable("Policies");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.ProjectPhases", b =>
                {
                    b.Property<int>("ProjPhaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Proj_PhaseId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ActualEndDate")
                        .HasColumnName("Actual_EndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ActualStartDate")
                        .HasColumnName("Actual_StartDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnName("isDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("PhaseId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PlanEndDate")
                        .HasColumnName("Plan_EndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PlanStartDate")
                        .HasColumnName("Plan_StartDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("ProjPhaseId")
                        .HasName("PK__ProjectP__61A6D420235416AD");

                    b.ToTable("ProjectPhases");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.ProjectSpecificTasks", b =>
                {
                    b.Property<int>("ProjSpecificTaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Proj_SpecificTaskId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ActualEndDate")
                        .HasColumnName("Actual_EndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ActualStartDate")
                        .HasColumnName("Actual_StartDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnName("isDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PlanEndDate")
                        .HasColumnName("Plan_EndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PlanStartDate")
                        .HasColumnName("Plan_StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ProjSpecificTaskName")
                        .HasColumnName("Proj_SpecificTaskName")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Rtmid")
                        .HasColumnName("RTMId")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<bool?>("StatusId")
                        .HasColumnType("bit");

                    b.Property<int?>("TskTaskId")
                        .HasColumnName("tsk_TaskID")
                        .HasColumnType("int");

                    b.HasKey("ProjSpecificTaskId")
                        .HasName("PK__ProjectS__D80A6D75D51FFB93");

                    b.ToTable("ProjectSpecificTasks");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.ProjectWorkstatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("FromDt")
                        .HasColumnName("FromDT")
                        .HasColumnType("datetime");

                    b.Property<string>("PercentageCompleted")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("ProjectName")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ToDt")
                        .HasColumnName("ToDT")
                        .HasColumnType("datetime");

                    b.Property<string>("UserName")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Project_workstatus");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.Projects", b =>
                {
                    b.Property<int>("ProjProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Proj_ProjectID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ActualEndDate")
                        .HasColumnName("Actual_EndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ActualStartDate")
                        .HasColumnName("Actual_StartDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CountryId")
                        .HasColumnName("CountryID")
                        .HasColumnType("int");

                    b.Property<bool?>("IsTimesheetProjectSpecific")
                        .HasColumnName("Is_Timesheet_ProjectSpecific")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PlanEndDate")
                        .HasColumnName("Plan_EndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("PlanStartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Plan_StartDate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("ProjAccountId")
                        .HasColumnName("Proj_AccountID")
                        .HasColumnType("int");

                    b.Property<bool?>("ProjActiveStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Proj_ActiveStatus")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("ProjClientName")
                        .HasColumnName("Proj_ClientName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("ProjCreatedBy")
                        .HasColumnName("Proj_CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ProjCreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Proj_CreatedDate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("ProjIsDeleted")
                        .HasColumnName("Proj_isDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ProjModifiedBy")
                        .HasColumnName("Proj_ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ProjModifiedDate")
                        .HasColumnName("Proj_ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ProjProjectCode")
                        .IsRequired()
                        .HasColumnName("Proj_ProjectCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProjProjectDescription")
                        .HasColumnName("Proj_ProjectDescription")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("ProjProjectName")
                        .IsRequired()
                        .HasColumnName("Proj_ProjectName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<short>("ProjVersion")
                        .HasColumnName("Proj_Version")
                        .HasColumnType("smallint");

                    b.Property<int?>("StateId")
                        .HasColumnName("StateID")
                        .HasColumnType("int");

                    b.Property<string>("WebUrl")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("ProjProjectId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.QuestionBank", b =>
                {
                    b.Property<int>("Qbid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("QBID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Answer")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Option1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Option2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Option3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Option4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Question")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TechnologyStackId")
                        .HasColumnType("int");

                    b.HasKey("Qbid")
                        .HasName("PK__Question__DFE79DB903BD6685");

                    b.HasIndex("TechnologyStackId");

                    b.ToTable("QuestionBank");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.RequestMessages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.ToTable("RequestMessages");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.RoleModules", b =>
                {
                    b.Property<int>("RmodRoleModuleId")
                        .HasColumnName("RMod_RoleModuleID")
                        .HasColumnType("int");

                    b.Property<int?>("ModuleAccessTypeId")
                        .HasColumnName("ModuleAccessTypeID")
                        .HasColumnType("int");

                    b.Property<int>("RmodAccountId")
                        .HasColumnName("RMod_AccountID")
                        .HasColumnType("int");

                    b.Property<bool?>("RmodActiveStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RMod_ActiveStatus")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("RmodCreatedBy")
                        .HasColumnName("RMod_CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("RmodCreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RMod_CreatedDate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("RmodIsDeleted")
                        .HasColumnName("RMod_isDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("RmodModifiedBy")
                        .HasColumnName("RMod_ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RmodModifiedDate")
                        .HasColumnName("RMod_ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("RmodRoleId")
                        .HasColumnName("RMod_RoleID")
                        .HasColumnType("int");

                    b.Property<short>("RmodVersion")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RMod_Version")
                        .HasColumnType("smallint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SubModuleId")
                        .HasColumnName("Sub_ModuleID")
                        .HasColumnType("int");

                    b.HasKey("RmodRoleModuleId")
                        .HasName("PK_RoleModule");

                    b.ToTable("RoleModules");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.Roles", b =>
                {
                    b.Property<int>("RolRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Rol_RoleID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("IsManagerRole")
                        .HasColumnType("bit");

                    b.Property<int>("RolAccountId")
                        .HasColumnName("Rol_AccountID")
                        .HasColumnType("int");

                    b.Property<bool?>("RolActiveStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Rol_ActiveStatus")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("RolCreatedBy")
                        .HasColumnName("Rol_createdBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("RolCreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Rol_CreatedDate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("RolIsDeleted")
                        .HasColumnName("Rol_isDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("RolModifiedBy")
                        .HasColumnName("Rol_ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RolModifiedDate")
                        .HasColumnName("Rol_ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("RolRoleCode")
                        .HasColumnName("Rol_RoleCode")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("RolRoleDescription")
                        .HasColumnName("Rol_RoleDescription")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("RolRoleName")
                        .HasColumnName("Rol_RoleName")
                        .HasColumnType("int");

                    b.Property<int>("RolVersion")
                        .HasColumnName("Rol_Version")
                        .HasColumnType("int");

                    b.HasKey("RolRoleId")
                        .HasName("PK_Master_Role");

                    b.HasIndex("RolAccountId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.SalarySlipDetails", b =>
                {
                    b.Property<int>("SalarySlipDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SalarySlipDetailID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmpssdetailId")
                        .HasColumnType("int");

                    b.HasKey("SalarySlipDetailId")
                        .HasName("PK__SalarySl__49008D4E33C4BC69");

                    b.ToTable("SalarySlipDetails");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.Skills", b =>
                {
                    b.Property<int>("SkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccAccountId")
                        .HasColumnName("Acc_AccountID")
                        .HasColumnType("int");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int?>("SkCreatedBy")
                        .HasColumnName("Sk_CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SkCreatedDate")
                        .HasColumnName("Sk_CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("SkIsDeleted")
                        .HasColumnName("Sk_isDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("SkModifiedBy")
                        .HasColumnName("Sk_ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SkModifiedDate")
                        .HasColumnName("Sk_ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("SkillTitle")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("StatusId")
                        .HasColumnName("StatusID")
                        .HasColumnType("int");

                    b.HasKey("SkillId")
                        .HasName("PK__Skills__DFA091871CA550DE");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.SocialMedia", b =>
                {
                    b.Property<int>("SocialMediaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Icon")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("SmAccountId")
                        .HasColumnName("Sm_AccountID")
                        .HasColumnType("int");

                    b.Property<bool?>("SmActiveStatus")
                        .HasColumnName("Sm_ActiveStatus")
                        .HasColumnType("bit");

                    b.Property<int?>("SmCreatedBy")
                        .HasColumnName("Sm_CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SmCreatedDate")
                        .HasColumnName("Sm_CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("SmIsDeleted")
                        .HasColumnName("Sm_isDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("SmModifiedBy")
                        .HasColumnName("Sm_ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SmModifiedDate")
                        .HasColumnName("Sm_ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Url")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("SocialMediaId");

                    b.ToTable("SocialMedia");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.States", b =>
                {
                    b.Property<int>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Countryid")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("StateCode")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("StateName")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<bool?>("StatusId")
                        .HasColumnType("bit");

                    b.HasKey("StateId");

                    b.ToTable("States");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.Step1", b =>
                {
                    b.Property<double?>("DRecordId")
                        .HasColumnName("d_record_id")
                        .HasColumnType("float");

                    b.Property<double?>("DnisPhone")
                        .HasColumnName("dnis_phone")
                        .HasColumnType("float");

                    b.ToTable("STEP1");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.SubPolicy", b =>
                {
                    b.Property<int>("SubPolicyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Icon")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<bool?>("IsCss")
                        .HasColumnName("Is_Css")
                        .HasColumnType("bit");

                    b.Property<int?>("PolicyId")
                        .HasColumnType("int");

                    b.Property<string>("Purpose")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<bool?>("SpolActiveStatus")
                        .HasColumnName("SPol_ActiveStatus")
                        .HasColumnType("bit");

                    b.Property<int?>("SpolCreatedBy")
                        .HasColumnName("SPol_CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SpolCreatedDate")
                        .HasColumnName("SPol_CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("SpolIsDeleted")
                        .HasColumnName("SPol_isDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("SpolModifiedBy")
                        .HasColumnName("SPol_ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SpolModifiedDate")
                        .HasColumnName("SPol_ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("SubPolicyTitle")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.HasKey("SubPolicyId");

                    b.ToTable("SubPolicy");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.SubPolicyDocument", b =>
                {
                    b.Property<int>("SubPolicyDocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ContentTypeId")
                        .HasColumnType("int");

                    b.Property<byte[]>("DocumentFile")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("DocumentTitle")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int?>("DocumentTypeId")
                        .HasColumnType("int");

                    b.Property<bool?>("SubPActiveStatus")
                        .HasColumnName("SubP_ActiveStatus")
                        .HasColumnType("bit");

                    b.Property<int?>("SubPCreatedBy")
                        .HasColumnName("SubP_CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SubPCreatedDate")
                        .HasColumnName("SubP_CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("SubPIsDeleted")
                        .HasColumnName("SubP_isDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("SubPModifiedBy")
                        .HasColumnName("SubP_ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SubPModifiedDate")
                        .HasColumnName("SubP_ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("SubPolicyDocumenTitle")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int?>("SubPolicyId")
                        .HasColumnType("int");

                    b.HasKey("SubPolicyDocumentId");

                    b.ToTable("SubPolicyDocument");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.TaskDetails", b =>
                {
                    b.Property<int>("TaskDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TaskDetailsID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("HoursWorked")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<int?>("ProjSpecificTaskId")
                        .HasColumnName("Proj_SpecificTaskId")
                        .HasColumnType("int");

                    b.Property<int?>("Projectid")
                        .HasColumnName("projectid")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TaskDate")
                        .HasColumnType("date");

                    b.Property<int>("TaskId")
                        .HasColumnName("TaskID")
                        .HasColumnType("int");

                    b.Property<int>("TimesheetId")
                        .HasColumnName("TimesheetID")
                        .HasColumnType("int");

                    b.HasKey("TaskDetailsId");

                    b.ToTable("TaskDetails");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.TechnologyStack", b =>
                {
                    b.Property<int>("Tid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Tid")
                        .HasName("PK__Technolo__C456D72981C4138A");

                    b.ToTable("TechnologyStack");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.TicketImages", b =>
                {
                    b.Property<int>("Tiid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TIID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("TicketId")
                        .HasColumnType("int");

                    b.HasKey("Tiid")
                        .HasName("PK__TicketIm__B6FF654E41036C8E");

                    b.HasIndex("TicketId");

                    b.ToTable("TicketImages");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.TicketPriority", b =>
                {
                    b.Property<int>("Tpid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TPID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Tpid")
                        .HasName("PK__TicketPr__A0726B4AD5A2F364");

                    b.ToTable("TicketPriority");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.Tickets", b =>
                {
                    b.Property<int>("Tid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClosedBy")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("DepartmentId")
                        .HasColumnName("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TicketClosedDate")
                        .HasColumnName("Ticket_Closed_date")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TicketForecastDate")
                        .HasColumnName("Ticket_Forecast_date")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TicketRaiseDate")
                        .HasColumnName("Ticket_raise_date")
                        .HasColumnType("datetime");

                    b.Property<int?>("TypeOfIssue")
                        .HasColumnType("int");

                    b.HasKey("Tid")
                        .HasName("PK__Tickets__C456D7292D1F1771");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.TicketsAuthority", b =>
                {
                    b.Property<int>("Taid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TAID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("DepartmentId")
                        .HasColumnName("DepartmentID")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Taid")
                        .HasName("PK__TicketsA__B43FE34A917C2860");

                    b.HasIndex("DepartmentId");

                    b.ToTable("TicketsAuthority");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.Timesheet", b =>
                {
                    b.Property<int>("TimesheetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TimesheetID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ByWeeklyEndDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("ByWeeklyStartDate")
                        .HasColumnType("date");

                    b.Property<int?>("ClientProjtId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("DeviceTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("L1ApproverDate")
                        .HasColumnName("L1_ApproverDate")
                        .HasColumnType("date");

                    b.Property<int?>("L1ApproverStatus")
                        .HasColumnName("L1_ApproverStatus")
                        .HasColumnType("int");

                    b.Property<string>("L1Manager")
                        .HasColumnName("L1_Manager")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("L1RejectedDate")
                        .HasColumnName("L1_RejectedDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("L2ApproverDate")
                        .HasColumnName("L2_ApproverDate")
                        .HasColumnType("date");

                    b.Property<int?>("L2ApproverStatus")
                        .HasColumnName("L2_ApproverStatus")
                        .HasColumnType("int");

                    b.Property<string>("L2Manager")
                        .HasColumnName("L2_Manager")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("L2RejectedDate")
                        .HasColumnName("L2_RejectedDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("SubmittedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("SubmittedType")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("TaskDate")
                        .HasColumnType("date");

                    b.Property<string>("TaskId")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime>("TimesheetMonth")
                        .HasColumnType("date");

                    b.Property<int>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.HasKey("TimesheetId");

                    b.ToTable("TIMESHEET");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.TimesheetComments", b =>
                {
                    b.Property<int>("TimesheetCommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Timesheet_CommentId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Action")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("createdDate")
                        .HasColumnType("date");

                    b.Property<int?>("ManageridL1")
                        .HasColumnName("managerid_L1")
                        .HasColumnType("int");

                    b.Property<int?>("ManageridL2")
                        .HasColumnName("managerid_L2")
                        .HasColumnType("int");

                    b.Property<int>("Timesheetid")
                        .HasColumnType("int");

                    b.Property<int>("Userid")
                        .HasColumnType("int");

                    b.HasKey("TimesheetCommentId")
                        .HasName("PK__Timeshee__E431A07FCFAF86B2");

                    b.ToTable("Timesheet_Comments");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.UserDevicesToken", b =>
                {
                    b.Property<int>("UdTokenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UdTokenID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("TokenId")
                        .HasColumnName("TokenID")
                        .HasColumnType("varchar(300)")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UdTokenId")
                        .HasName("PK__UserDevi__6B6FB2212D9EE326");

                    b.ToTable("UserDevicesToken");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.UserGender", b =>
                {
                    b.Property<int>("UsrGenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Usr_GenderId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccAccountId")
                        .HasColumnName("Acc_AccountID")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.HasKey("UsrGenderId")
                        .HasName("PK__UserGend__C9C3E2128280CE81");

                    b.ToTable("UserGender");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.UserLeaveTypeConsumed", b =>
                {
                    b.Property<int>("UsrltTypeConsumeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Usrlt_TypeConsumeId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LschmLeaveSchemeId")
                        .HasColumnName("LSchm_LeaveSchemeID")
                        .HasColumnType("int");

                    b.Property<int?>("NoOfDays")
                        .HasColumnName("No_Of_Days")
                        .HasColumnType("int");

                    b.Property<int?>("UsrlLeaveId")
                        .HasColumnName("Usrl_LeaveId")
                        .HasColumnType("int");

                    b.HasKey("UsrltTypeConsumeId")
                        .HasName("PK__UserLeav__A289C13A74333E14");

                    b.ToTable("UserLeaveTypeConsumed");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.UserLeaves", b =>
                {
                    b.Property<int>("UsrlLeaveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Usrl_LeaveId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApprovedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Comments")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("LStatusId")
                        .HasColumnName("L_StatusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LeaveEndDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("LeaveStartDate")
                        .HasColumnType("date");

                    b.Property<int?>("OnHoldBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OnHoldDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("RejectedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RejectedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("TotNoDays")
                        .HasColumnName("Tot_No_Days")
                        .HasColumnType("int");

                    b.Property<int?>("UsrlUserId")
                        .HasColumnName("Usrl_UserId")
                        .HasColumnType("int");

                    b.HasKey("UsrlLeaveId")
                        .HasName("PK__UserLeav__D8537A6D439D0A86");

                    b.ToTable("UserLeaves");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.UserProjectEngagement", b =>
                {
                    b.Property<int>("UserProjEngId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserProj_EngId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnName("isDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ProjSpecificTaskId")
                        .HasColumnName("Proj_SpecificTaskId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int?>("TskTaskId")
                        .HasColumnName("tsk_TaskID")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserProjEngId")
                        .HasName("PK__UserProj__60BC0C443444AD73");

                    b.ToTable("UserProjectEngagement");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.UserProjects", b =>
                {
                    b.Property<int>("UprojUserProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UProj_UserProjectID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClientprojId")
                        .HasColumnName("ClientprojID")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDirectManager")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsL1Manager")
                        .HasColumnName("Is_L1_Manager")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsL2Manager")
                        .HasColumnName("Is_L2_Manager")
                        .HasColumnType("bit");

                    b.Property<bool?>("Isclientcalendar")
                        .HasColumnName("isclientcalendar")
                        .HasColumnType("bit");

                    b.Property<int?>("TimesheetMode")
                        .HasColumnType("int");

                    b.Property<bool>("UprojActiveStatus")
                        .HasColumnName("UProj_ActiveStatus")
                        .HasColumnType("bit");

                    b.Property<int>("UprojCreatedBy")
                        .HasColumnName("UProj_CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UprojCreatedDate")
                        .HasColumnName("UProj_CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("UprojEndDate")
                        .HasColumnName("UProj_EndDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("UprojIsDeleted")
                        .HasColumnName("UProj_isDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("UprojL1ManagerId")
                        .HasColumnName("UProj_L1_ManagerId")
                        .HasColumnType("int");

                    b.Property<int?>("UprojL2ManagerId")
                        .HasColumnName("UProj_L2_ManagerId")
                        .HasColumnType("int");

                    b.Property<int?>("UprojModifiedBy")
                        .HasColumnName("UProj_ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UprojModifiedDate")
                        .HasColumnName("UProj_ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<byte>("UprojParticipationPercentage")
                        .HasColumnName("UProj_ParticipationPercentage")
                        .HasColumnType("tinyint");

                    b.Property<int>("UprojProjectId")
                        .HasColumnName("UProj_ProjectID")
                        .HasColumnType("int");

                    b.Property<DateTime>("UprojStartDate")
                        .HasColumnName("UProj_StartDate")
                        .HasColumnType("datetime");

                    b.Property<int>("UprojUserId")
                        .HasColumnName("UProj_UserID")
                        .HasColumnType("int");

                    b.Property<short>("UprojVersion")
                        .HasColumnName("UProj_Version")
                        .HasColumnType("smallint");

                    b.HasKey("UprojUserProjectId");

                    b.ToTable("UserProjects");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.UserSalaryCalculations", b =>
                {
                    b.Property<int>("UserSalaryCalculationsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdministrativeCost")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AdministrativeCostPerHour")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AnnualSalary")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AnnualSalaryPerhour")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Bonus")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BonusPerHour")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Gcfee")
                        .HasColumnName("GCFee")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("GcfeePerHour")
                        .HasColumnName("GCFeePerHour")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("H1bfee")
                        .HasColumnName("H1BFee")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("H1bfeePerHour")
                        .IsRequired()
                        .HasColumnName("H1BFeePerHour")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("HireType")
                        .HasColumnType("int");

                    b.Property<string>("Holidays")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("HolidaysPerHour")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Insurance")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("InsurancePerHour")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("PaidBench")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("PaidBenchPerHour")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("PayrollTaxes")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("PayrollTaxesPerHour")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Relocation")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RelocationPerHour")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Total")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("VisaType")
                        .HasColumnType("int");

                    b.Property<string>("_2weeksPaidVocation")
                        .HasColumnName("2WeeksPaidVocation")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("_2weeksPaidVocationPerHour")
                        .HasColumnName("2WeeksPaidVocationPerHour")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("UserSalaryCalculationsId");

                    b.ToTable("UserSalaryCalculations");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.UserSkills", b =>
                {
                    b.Property<int>("UsrSkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Usr_SkillId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Experience")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<bool?>("IsDeleted")
                        .HasColumnName("Is_Deleted")
                        .HasColumnType("bit");

                    b.Property<int?>("SkillId")
                        .HasColumnType("int");

                    b.Property<int?>("StatusId")
                        .HasColumnName("StatusID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UskCreatedDate")
                        .HasColumnName("Usk_CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("UskModifiedDate")
                        .HasColumnName("Usk_ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("UsrUserId")
                        .HasColumnName("Usr_UserId")
                        .HasColumnType("int");

                    b.HasKey("UsrSkillId")
                        .HasName("PK__UserSkil__0F63F579B4A24B6C");

                    b.ToTable("UserSkills");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.UserSocialMediaProfiles", b =>
                {
                    b.Property<int>("SocialMediaProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Url")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UsmpCreatedDate")
                        .HasColumnName("Usmp_CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("UsmpModifiedDate")
                        .HasColumnName("Usmp_ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("UsmpSocialMediaId")
                        .HasColumnName("Usmp_SocialMediaId")
                        .HasColumnType("int");

                    b.Property<int?>("UsmpUserId")
                        .HasColumnName("Usmp_UserID")
                        .HasColumnType("int");

                    b.HasKey("SocialMediaProfileId")
                        .HasName("PK__UserSoci__8FA5D461EA07862D");

                    b.ToTable("UserSocialMediaProfiles");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.UserTitle", b =>
                {
                    b.Property<int>("UsrTitleid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Usr_Titleid")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccAccountId")
                        .HasColumnName("Acc_AccountID")
                        .HasColumnType("int");

                    b.Property<string>("TitlePrefix")
                        .HasColumnType("char(3)")
                        .IsFixedLength(true)
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.HasKey("UsrTitleid")
                        .HasName("PK__UserTitl__080E05F5480473AA");

                    b.ToTable("UserTitle");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.UserType", b =>
                {
                    b.Property<int>("UsTUserTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UsT_UserTypeID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("UsTAccountId")
                        .HasColumnName("UsT_AccountID")
                        .HasColumnType("int");

                    b.Property<bool?>("UsTActiveStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UsT_ActiveStatus")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("UsTCreatedBy")
                        .HasColumnName("UsT_CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UsTCreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UsT_CreatedDate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("UsTIsDeleted")
                        .HasColumnName("UsT_isDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("UsTModifiedBy")
                        .HasColumnName("UsT_ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UsTModifiedDate")
                        .HasColumnName("UsT_ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UsTUserType")
                        .IsRequired()
                        .HasColumnName("UsT_UserType")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("UsTUserTypeCode")
                        .IsRequired()
                        .HasColumnName("UsT_UserTypeCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UsTUserTypeDescription")
                        .HasColumnName("UsT_UserTypeDescription")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("UsTVersion")
                        .HasColumnName("UsT_Version")
                        .HasColumnType("int");

                    b.HasKey("UsTUserTypeId");

                    b.HasIndex("UsTAccountId");

                    b.ToTable("UserType");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.Users", b =>
                {
                    b.Property<int>("UsrUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Usr_UserID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UrlToken")
                        .HasColumnName("Url_token")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("UsrAccountId")
                        .HasColumnName("Usr_AccountID")
                        .HasColumnType("int");

                    b.Property<bool?>("UsrActiveStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Usr_ActiveStatus")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("UsrCreatedBy")
                        .HasColumnName("Usr_CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UsrCreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Usr_CreatedDate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("UsrIsDeleted")
                        .HasColumnName("Usr_isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("UsrLoginId")
                        .IsRequired()
                        .HasColumnName("Usr_LoginId")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("UsrManager")
                        .HasColumnName("Usr_Manager")
                        .HasColumnType("int");

                    b.Property<int?>("UsrManager2")
                        .HasColumnName("Usr_Manager2")
                        .HasColumnType("int");

                    b.Property<int?>("UsrModifiedBy")
                        .HasColumnName("Usr_ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UsrModifiedDate")
                        .HasColumnName("Usr_ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UsrPassword")
                        .IsRequired()
                        .HasColumnName("Usr_Password")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("UsrRoleId")
                        .HasColumnName("Usr_RoleID")
                        .HasColumnType("int");

                    b.Property<string>("UsrSalt")
                        .HasColumnName("Usr_salt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsrTaskId")
                        .HasColumnName("Usr_TaskID")
                        .HasColumnType("int");

                    b.Property<int>("UsrUserTypeId")
                        .HasColumnName("Usr_UserTypeID")
                        .HasColumnType("int");

                    b.Property<string>("UsrUsername")
                        .HasColumnName("Usr_Username")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<short>("UsrVersion")
                        .HasColumnName("Usr_Version")
                        .HasColumnType("smallint");

                    b.HasKey("UsrUserId")
                        .HasName("PK_Master_User");

                    b.HasIndex("UsrAccountId");

                    b.HasIndex("UsrUserTypeId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.UsersForProjects", b =>
                {
                    b.Property<int>("UfpUsersForProjectsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Ufp_UsersForProjectsID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("UfpActiveStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Ufp_ActiveStatus")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("UfpCreatedBy")
                        .HasColumnName("Ufp_CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UfpCreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Ufp_CreatedDate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("UfpEndDate")
                        .HasColumnName("Ufp_EndDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("UfpIsDeleted")
                        .HasColumnName("Ufp_isDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("UfpModifiedBy")
                        .HasColumnName("Ufp_ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UfpModifiedDate")
                        .HasColumnName("Ufp_ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("UfpParticipationPercentage")
                        .HasColumnName("Ufp_ParticipationPercentage")
                        .HasColumnType("int");

                    b.Property<int>("UfpProjectId")
                        .HasColumnName("Ufp_ProjectID")
                        .HasColumnType("int");

                    b.Property<DateTime>("UfpStartDate")
                        .HasColumnName("Ufp_StartDate")
                        .HasColumnType("datetime");

                    b.Property<int>("UfpUserId")
                        .HasColumnName("Ufp_UserID")
                        .HasColumnType("int");

                    b.Property<short>("UfpVersion")
                        .HasColumnName("Ufp_Version")
                        .HasColumnType("smallint");

                    b.HasKey("UfpUsersForProjectsId");

                    b.ToTable("UsersForProjects");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.UsersProfile", b =>
                {
                    b.Property<int>("UsrPUserProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UsrP_UserProfileID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MaritalStatus")
                        .HasColumnName("Marital_Status")
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("Passcode")
                        .HasColumnName("passcode")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("PermanentAddress")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("TemporaryAddress")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<int?>("UsrGenderId")
                        .HasColumnName("Usr_GenderId")
                        .HasColumnType("int");

                    b.Property<bool?>("UsrPActiveStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UsrP_ActiveStatus")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("UsrPCreatedBy")
                        .HasColumnName("UsrP_CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UsrPCreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UsrP_CreatedDate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("UsrPDob")
                        .HasColumnName("UsrP_DOB")
                        .HasColumnType("datetime");

                    b.Property<string>("UsrPEmailId")
                        .HasColumnName("UsrP_EmailID")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("UsrPEmployeeId")
                        .HasColumnName("UsrP_EmployeeID")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("UsrPFirstName")
                        .IsRequired()
                        .HasColumnName("UsrP_FirstName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("UsrPIsDeleted")
                        .HasColumnName("UsrP_isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("UsrPLastName")
                        .IsRequired()
                        .HasColumnName("UsrP_LastName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("UsrPModifiedBy")
                        .HasColumnName("UsrP_ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UsrPModifiedDate")
                        .HasColumnName("UsrP_ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("UsrPUserId")
                        .HasColumnName("UsrP_UserID")
                        .HasColumnType("int");

                    b.Property<short>("UsrPVersion")
                        .HasColumnName("UsrP_Version")
                        .HasColumnType("smallint");

                    b.Property<int?>("UsrTitleid")
                        .HasColumnName("Usr_Titleid")
                        .HasColumnType("int");

                    b.Property<int?>("UsrpCountryCode")
                        .HasColumnName("Usrp_CountryCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UsrpDoj")
                        .HasColumnName("Usrp_DOJ")
                        .HasColumnType("datetime");

                    b.Property<string>("UsrpMobileNumber")
                        .HasColumnName("Usrp_MobileNumber")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UsrpProfilePicture")
                        .HasColumnName("Usrp_ProfilePicture")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("UsrPUserProfileId");

                    b.HasIndex("UsrPUserId");

                    b.ToTable("UsersProfile");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.UserworkfromHome", b =>
                {
                    b.Property<int>("UserwfhId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserwfhID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApprovedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Comments")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsWorkFromHome")
                        .HasColumnName("Is_WorkFromHome")
                        .HasColumnType("bit");

                    b.Property<int?>("LStatusId")
                        .HasColumnName("L_StatusId")
                        .HasColumnType("int");

                    b.Property<int?>("OnHoldBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OnHoldDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("RejectedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RejectedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("TotNoDays")
                        .HasColumnName("Tot_No_Days")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UserwfhEndDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("UserwfhStartDate")
                        .HasColumnType("date");

                    b.Property<int?>("UsrlUserId")
                        .HasColumnName("Usrl_UserId")
                        .HasColumnType("int");

                    b.HasKey("UserwfhId")
                        .HasName("PK__Userwork__54F663F2B5D9B125");

                    b.ToTable("UserworkfromHome");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.UssalaryComponents", b =>
                {
                    b.Property<int>("UssalaryComponentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("USSalaryComponentID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("StatusId")
                        .HasColumnName("StatusID")
                        .HasColumnType("bit");

                    b.Property<string>("UssalaryComponent")
                        .HasColumnName("USSalaryComponent")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("UssalaryComponentValue")
                        .HasColumnName("USSalaryComponentValue")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("UssalaryComponentId")
                        .HasName("PK__USSalary__93969884811AD992");

                    b.ToTable("USSalaryComponents");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.VisaType", b =>
                {
                    b.Property<int>("VisaTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VisaTypeID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("StatusId")
                        .HasColumnName("StatusID")
                        .HasColumnType("bit");

                    b.Property<string>("VisaType1")
                        .HasColumnName("VisaType")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("VisaTypeShortForm")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("VisaTypeId");

                    b.ToTable("VisaType");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.Account", b =>
                {
                    b.HasOne("EC.Infra.Data.Context.Users", "AccCreatedByNavigation")
                        .WithMany("Account")
                        .HasForeignKey("AccCreatedBy")
                        .HasConstraintName("FK_Account_Acc_CreatedBy")
                        .IsRequired();
                });

            modelBuilder.Entity("EC.Infra.Data.Context.AspNetUserClaims", b =>
                {
                    b.HasOne("EC.Infra.Data.Context.AspNetUsers", "User")
                        .WithMany("AspNetUserClaims")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_dbo.AspNetUserClaims_dbo.AspNetUsers_UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EC.Infra.Data.Context.AspNetUserRoles", b =>
                {
                    b.HasOne("EC.Infra.Data.Context.AspNetRoles", "Role")
                        .WithMany("AspNetUserRoles")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_dbo.AspNetUserRoles_dbo.AspNetRoles_RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EC.Infra.Data.Context.AspNetUsers", "User")
                        .WithMany("AspNetUserRoles")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_dbo.AspNetUserRoles_dbo.AspNetUsers_UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EC.Infra.Data.Context.AttachmentsinTimesheets", b =>
                {
                    b.HasOne("EC.Infra.Data.Context.Timesheet", "TimeSheet")
                        .WithMany("AttachmentsinTimesheets")
                        .HasForeignKey("TimeSheetId")
                        .HasConstraintName("FK__Attachmen__TimeS__06ED0088");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.CandidateInterviewResult", b =>
                {
                    b.HasOne("EC.Infra.Data.Context.InterviewCandidate", "Candidate")
                        .WithMany("CandidateInterviewResult")
                        .HasForeignKey("Candidateid")
                        .HasConstraintName("FK__Candidate__Candi__469D7149");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.ClientProjects", b =>
                {
                    b.HasOne("EC.Infra.Data.Context.Projects", "ProjProject")
                        .WithMany("ClientProjects")
                        .HasForeignKey("ProjProjectId")
                        .HasConstraintName("FK_ClientProjects_Projects");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.HolidayCalendar", b =>
                {
                    b.HasOne("EC.Infra.Data.Context.Account", "Account")
                        .WithMany("HolidayCalendar")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK__HolidayCa__Accou__7D439ABD")
                        .IsRequired();

                    b.HasOne("EC.Infra.Data.Context.Users", "CreatedByNavigation")
                        .WithMany("HolidayCalendarCreatedByNavigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK__HolidayCa__Creat__7E37BEF6");

                    b.HasOne("EC.Infra.Data.Context.Users", "ModifiedByNavigation")
                        .WithMany("HolidayCalendarModifiedByNavigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("FK__HolidayCa__Modif__7F2BE32F");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.InterviewCandidate", b =>
                {
                    b.HasOne("EC.Infra.Data.Context.AssessmentForPosition", "AssessmentForPosition")
                        .WithMany("InterviewCandidate")
                        .HasForeignKey("AssessmentForPositionid")
                        .HasConstraintName("FK__Interview__Asses__40E497F3");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.InterviewPositionTechnologyStack", b =>
                {
                    b.HasOne("EC.Infra.Data.Context.AssessmentForPosition", "AssessmentForPositionPosition")
                        .WithMany("InterviewPositionTechnologyStack")
                        .HasForeignKey("AssessmentForPositionPositionid")
                        .HasConstraintName("FK__Interview__Asses__3A379A64");

                    b.HasOne("EC.Infra.Data.Context.TechnologyStack", "TechnologyStack")
                        .WithMany("InterviewPositionTechnologyStack")
                        .HasForeignKey("TechnologyStackId")
                        .HasConstraintName("FK__Interview__Techn__3B2BBE9D");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.Issuetypes", b =>
                {
                    b.HasOne("EC.Infra.Data.Context.Department", "Department")
                        .WithMany("Issuetypes")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK__Issuetype__Depar__253C7D7E");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.QuestionBank", b =>
                {
                    b.HasOne("EC.Infra.Data.Context.TechnologyStack", "TechnologyStack")
                        .WithMany("QuestionBank")
                        .HasForeignKey("TechnologyStackId")
                        .HasConstraintName("FK__QuestionB__Techn__3572E547");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.Roles", b =>
                {
                    b.HasOne("EC.Infra.Data.Context.Account", "RolAccount")
                        .WithMany("Roles")
                        .HasForeignKey("RolAccountId")
                        .HasConstraintName("FK_Roles_AccountID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EC.Infra.Data.Context.TicketImages", b =>
                {
                    b.HasOne("EC.Infra.Data.Context.Tickets", "Ticket")
                        .WithMany("TicketImages")
                        .HasForeignKey("TicketId")
                        .HasConstraintName("FK__TicketIma__Ticke__2CDD9F46");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.Tickets", b =>
                {
                    b.HasOne("EC.Infra.Data.Context.Department", "Department")
                        .WithMany("Tickets")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK__Tickets__Departm__2A01329B");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.TicketsAuthority", b =>
                {
                    b.HasOne("EC.Infra.Data.Context.Department", "Department")
                        .WithMany("TicketsAuthority")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK__TicketsAu__Depar__226010D3");
                });

            modelBuilder.Entity("EC.Infra.Data.Context.UserType", b =>
                {
                    b.HasOne("EC.Infra.Data.Context.Account", "UsTAccount")
                        .WithMany("UserType")
                        .HasForeignKey("UsTAccountId")
                        .HasConstraintName("FK_UserType_AccountID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EC.Infra.Data.Context.Users", b =>
                {
                    b.HasOne("EC.Infra.Data.Context.Account", "UsrAccount")
                        .WithMany("Users")
                        .HasForeignKey("UsrAccountId")
                        .HasConstraintName("FK_Users_AccountID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EC.Infra.Data.Context.UserType", "UsrUserType")
                        .WithMany("Users")
                        .HasForeignKey("UsrUserTypeId")
                        .HasConstraintName("FK_Users_UserTypeID")
                        .IsRequired();
                });

            modelBuilder.Entity("EC.Infra.Data.Context.UsersProfile", b =>
                {
                    b.HasOne("EC.Infra.Data.Context.Users", "UsrPUser")
                        .WithMany("UsersProfile")
                        .HasForeignKey("UsrPUserId")
                        .HasConstraintName("FK_UsersProfile_Master_User1")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
